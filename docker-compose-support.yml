# Dockerfile for bringing up surrounding systems.
# Namely, Kafka & ElasticSearcn
services:
    
  # Zookeeper instance (for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kafka Instance
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  # UI for viewing Kafka
  kafdrop:
    restart: always
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9010:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:29092
      - SERVER_SERVLET_CONTEXTPATH=/
    depends_on:
      - kafka
    links:
      - kafka
  
  # Elasticsearch
  es01:
    image: elasticsearch:7.17.26
    container_name: es01
    environment:
      cluster.name: es01
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -X GET 'http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=90s&pretty' || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.5
    container_name: er-kibana
    environment:
      ELASTICSEARCH_HOSTS: http://es01:9200
    depends_on:
      es01:
        condition: service_healthy
    ports:
      - "5601:5601"
